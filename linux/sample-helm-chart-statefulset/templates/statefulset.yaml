apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sql-statefull-deploy.fullname" . }}
  labels:
    {{- include "sql-statefull-deploy.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "sql-statefull-deploy.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "sql-statefull-deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sql-statefull-deploy.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command:
            - /bin/bash
            - -c
            - cp /var/opt/config/mssql.conf /var/opt/mssql/mssql.conf && /opt/mssql/bin/sqlservr
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
           - containerPort: {{ .Values.containers.ports.containerPort}}
          env:
           - name: MSSQL_PID
             value: "{{ .Values.MSSQL_PID.value}}"
           - name: ACCEPT_EULA
             value: "{{ .Values.ACCEPT_EULA.value | upper}}"
           - name: MSSQL_AGENT_ENABLED
             value: "{{ .Values.MSSQL_AGENT_ENABLED.value}}"
           - name: SA_PASSWORD
             valueFrom:
              secretKeyRef:
               name: mssql
               key: SA_PASSWORD 
          volumeMounts:
           - name: mssql
             mountPath: "/var/opt/mssql"
           - name: mssql-config-volume
             mountPath: /var/opt/config
      volumes:        
      - name: mssql-config-volume
        configMap:
         name: mssql
  volumeClaimTemplates:
    - metadata:
       name: mssql
      spec:
       accessModes:
       - ReadWriteOnce
       resources:
        requests:
         storage: 8Gi